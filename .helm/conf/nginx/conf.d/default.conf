server {
  listen 80;

  server_name _;

  root /var/www/html/public;
  index index.php;
  rewrite_log on;

  location ~ /\.well-known {
    default_type "text/plain";
    break;
  }

  location ~* /\.(?!well-known\/) {
    return 404;
  }

  location ~* (?:#.*#|\.(?:bak|conf|dist|fla|in[ci]|log|orig|psd|sh|sql|sw[op])|~)$ {
    return 404;
  }

  location ~* ^(.*)(jpg|jpeg|png)$  {
    set $webp  $1webp;
    set $rootFile "${document_root}${webp}";
    if ($http_accept ~* "webp"){set $test  A;}
    if (-f $rootFile) {set $test "${test}B";}
    if ($test = AB) {
        add_header Vary Accept;
        rewrite (.*) $webp break;
    }
  }

  location ~ [^/]\.php(/|$) {
    include                            fastcgi_params;
    fastcgi_buffer_size                256k;
    fastcgi_buffers                    256 16k;
    fastcgi_read_timeout               300;
    fastcgi_index                      index.php;
    fastcgi_pass                       localhost:9000;
    fastcgi_split_path_info            ^(.+\.php)(.*)$;
    fastcgi_param PATH_INFO            $fastcgi_path_info;
    fastcgi_param SCRIPT_FILENAME      $document_root$fastcgi_script_name;
    fastcgi_param HTTP_X_FORWARDED_FOR $remote_addr;
    fastcgi_param HTTP_X_REAL_IP       $remote_addr;
    fastcgi_param REQUEST_URI          $http_x_original_request_url;
  }

  location / {
    index index.php index.html index.htm;
    try_files $uri $uri/ /index.php?$query_string;
  }

  location /healthz-2q9e4h {
    stub_status on;
    access_log  off;
  }

  location ~ ^/(status|ping)$ {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass            localhost:9000;
    fastcgi_index           index.php;
    fastcgi_param           SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include                 fastcgi_params;
    access_log              off;
  }

  add_header X-UA-Compatible             $x_ua_compatible           always;
  add_header Referrer-Policy             $referrer_policy           always;
  add_header X-Content-Type-Options      nosniff                    always;
  #add_header X-Frame-Options             $x_frame_options           always;
  add_header X-XSS-Protection            $x_xss_protection          always;
  add_header Access-Control-Allow-Origin $cors                      always;
  #add_header Content-Security-Policy     $content_security_policy   always;
  add_header Pragma                      $pragma                    always;
  add_header Strict-Transport-Security   $strict_transport_security always;
}
